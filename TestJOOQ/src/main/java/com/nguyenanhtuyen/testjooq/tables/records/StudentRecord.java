/*
 * This file is generated by jOOQ.
 */
package com.nguyenanhtuyen.testjooq.tables.records;


import com.nguyenanhtuyen.testjooq.tables.Student;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentRecord extends UpdatableRecordImpl<StudentRecord> implements Record5<Integer, String, Integer, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>testjooq.student.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>testjooq.student.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>testjooq.student.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>testjooq.student.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>testjooq.student.age</code>.
     */
    public void setAge(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>testjooq.student.age</code>.
     */
    public Integer getAge() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>testjooq.student.address</code>.
     */
    public void setAddress(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>testjooq.student.address</code>.
     */
    public String getAddress() {
        return (String) get(3);
    }

    /**
     * Setter for <code>testjooq.student.id_class</code>.
     */
    public void setIdClass(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>testjooq.student.id_class</code>.
     */
    public Integer getIdClass() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Integer, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, Integer, String, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Student.STUDENT.ID;
    }

    @Override
    public Field<String> field2() {
        return Student.STUDENT.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Student.STUDENT.AGE;
    }

    @Override
    public Field<String> field4() {
        return Student.STUDENT.ADDRESS;
    }

    @Override
    public Field<Integer> field5() {
        return Student.STUDENT.ID_CLASS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getAge();
    }

    @Override
    public String component4() {
        return getAddress();
    }

    @Override
    public Integer component5() {
        return getIdClass();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getAge();
    }

    @Override
    public String value4() {
        return getAddress();
    }

    @Override
    public Integer value5() {
        return getIdClass();
    }

    @Override
    public StudentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StudentRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public StudentRecord value3(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public StudentRecord value4(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public StudentRecord value5(Integer value) {
        setIdClass(value);
        return this;
    }

    @Override
    public StudentRecord values(Integer value1, String value2, Integer value3, String value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentRecord
     */
    public StudentRecord() {
        super(Student.STUDENT);
    }

    /**
     * Create a detached, initialised StudentRecord
     */
    public StudentRecord(Integer id, String name, Integer age, String address, Integer idClass) {
        super(Student.STUDENT);

        setId(id);
        setName(name);
        setAge(age);
        setAddress(address);
        setIdClass(idClass);
    }
}
